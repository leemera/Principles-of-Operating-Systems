## 파일

파일은 데이터를 저장하는 기본 단위로, 운영체제는 파일 시스템을 통해 파일을 관리합니다.

- 파일 이름: 파일을 구별하는 식별자
- 파일 경로: 파일이 저장된 위치 (예: /home/user/document.txt)
- 파일 속성: 크기, 생성일, 권한 등

파일은 크게 텍스트 파일과 바이너리 파일로 구분됩니다.

## 디렉터리

디렉터리는 파일을 체계적으로 관리하기 위한 구조입니다. 폴더(Folder)라고도 부릅니다.

- 디렉터리는 파일과 다른 디렉터리를 포함할 수 있음 (계층적 구조)
- 루트 디렉터리(/)에서 시작하여 트리 구조 형성
- 경로(Path): 절대 경로와 상대 경로로 구분

예:
- 절대 경로: /home/user/file.txt
- 상대 경로: ../file.txt

## 파일과 메모리

운영체제는 파일 입출력과 메모리 관리를 효율적으로 연계합니다.

- 버퍼링(Buffering): 파일 데이터를 임시 메모리 공간(버퍼)에 저장 후 일괄 처리
- 메모리 맵 파일(Memory-Mapped File): 파일 내용을 가상 메모리에 직접 매핑하여 처리 속도 향상
- 캐싱(Caching): 자주 사용되는 파일 데이터를 메모리에 저장하여 접근 시간 단축

## (부록) 데이터 표현

컴퓨터는 모든 데이터를 이진수(0과 1)로 표현합니다.

- 정수 표현: 2의 보수 방식 사용
- 실수 표현: IEEE 754 표준에 따라 부동소수점으로 표현
- 문자 표현: ASCII, 유니코드(UTF-8 등)를 사용
- 비트와 바이트: 1바이트 = 8비트

## (부록) 스레드풀

스레드풀(Thread Pool)은 미리 생성된 스레드들의 집합으로, 작업을 효율적으로 처리하기 위한 구조입니다.

- 스레드 생성/제거 오버헤드 감소
- 시스템 자원 효율적 사용
- 다중 요청 처리 시 유리함 (서버, 웹서버 등에서 사용)

## (부록) 라운드로빈 모델

라운드로빈(Round-Robin) 모델은 CPU 스케줄링 방식 중 하나로, 각 프로세스에게 일정 시간(Time Quantum)을 주어 순차적으로 CPU를 할당합니다.

- 공정성 보장
- 각 프로세스가 일정 시간 간격으로 CPU를 사용함
- 실시간 시스템보다는 시분할 시스템에서 주로 사용
