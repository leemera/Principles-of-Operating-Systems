
✅ 메모리의 이해
메모리(Memory)는 실행 중인 프로그램과 데이터를 일시적으로 저장하는 공간으로, 주로 RAM(주기억장치)을 말합니다. 운영체제는 이 메모리를 효율적으로 관리해야 하며, 주요 개념은 다음과 같습니다:
- 주소 공간: 각 프로세스는 고유한 가상 주소 공간을 가짐
- 가상 메모리(Virtual Memory): 실제 메모리보다 큰 메모리처럼 동작
- 메모리 보호: 한 프로세스가 다른 프로세스 메모리에 접근하지 못하도록 차단

✅ 기초 메모리 관리
운영체제의 기초적인 메모리 관리 방식은 다음과 같습니다:

1. 연속 메모리 할당(Contiguous Allocation)
   - 하나의 프로세스가 연속된 메모리 공간을 차지
   - 외부 단편화 문제가 발생 가능

2. 분할(Fixed/Variable Partitioning)
   - 고정 분할: 크기 고정 → 내부 단편화 문제
   - 가변 분할: 요청 크기만큼 할당 → 외부 단편화 발생

3. 페이징(Paging)
   - 메모리를 고정된 크기의 블록으로 나눔 (프레임, 페이지)
   - 외부 단편화 해결, 주소 변환 필요

4. 세그멘테이션(Segmentation)
   - 논리적으로 나눈 세그먼트(코드, 데이터 등)를 각각 관리
   - 주소 계산 복잡, 외부 단편화 가능

✅ 페이지 교체(Page Replacement)
가상 메모리 시스템에서는 페이지 부재(Page Fault)가 발생할 때 페이지 교체 알고리즘이 사용됩니다. 주요 알고리즘:

1. FIFO (First-In, First-Out)
   - 가장 먼저 들어온 페이지를 제거
   - 단순하지만 성능이 나쁠 수 있음

2. LRU (Least Recently Used)
   - 가장 오래 사용되지 않은 페이지 제거
   - 좋은 성능, 구현 복잡

3. Optimal (OPT)
   - 앞으로 가장 오래 사용되지 않을 페이지 제거
   - 이상적인 성능이지만 현실에서는 불가능 (미래 예측 불가)

4. Clock (Second Chance)
   - 원형 큐로 구현, FIFO 개선형
   - 사용 비트 참조로 교체 대상 결정

더 많은 자료는 GPTOnline.ai(https://gptonline.ai/ko/)에서 확인하세요.
